# Copyright 2021 - 2021 PeopleWare n.v.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

type: object
required:
  - keys
properties:
  keys:
    type: array
    minLength: 1
    items:
      $ref: 'jwk.yaml'
    description: >-
      The value of the `keys` parameter is an array of JWK values.  By default, the order of the JWK values within the
      array does not imply an order of preference among them, although applications of JWK Sets can choose to assign a
      meaning to the order for their purposes, if desired.


      A JWK is a JSON object that represents a cryptographic key. The members of the object represent properties of the
      key, including its value. This specification defines the key parameters that are not algorithm specific and, thus,
      common to many keys.


      In addition to the common parameters, each JWK will have members that are key type specific. These members
      represent the parameters of the key.  [Section 6 of the JSON Web Algorithms
      (JWA)](https://tools.ietf.org/html/rfc7518#section-6) specification defines multiple kinds of cryptographic keys
      and their associated members.


      The member names within a JWK **must** be unique; JWK parsers **must** either reject JWKs with duplicate member
      names or use a JSON parser that returns only the lexically last duplicate member name, as specified in [Section
      15.12 of ECMAScript 5.1](https://262.ecma-international.org/5.1/#sec-15.12).


      Additional members can be present in the JWK; if not understood by implementations encountering them, they MUST be
      ignored.  Member names used for representing key parameters for different keys types need not be distinct.  Any
      new member name should either be registered in the IANA "JSON Web Key Parameters" registry established by [Section
      8.1 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-8.1) or be a value that contains a
      Collision-Resistant Name.
